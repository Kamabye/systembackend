# Puerto en el que se ejecuta la aplicacion
# server.port = 8081

#HEROKU
#server.port=${PORT:8080}

# URL Sitio Web
website.url=http://localhost:8081/system

#HEROKU
#website.url=https://kamabye.herokuapp.com/
#
# http://localhost:8081/system
server.servlet.context-path=/system

# Configuración para DataSource de PostgreSQL
postgresql.datasource.jdbc-url=jdbc:postgresql://aws-0-us-west-1.pooler.supabase.com:5432/postgres
#postgresql.datasource.jdbc-url=jdbc:postgresql://localhost:5433/system
postgresql.datasource.username=postgres.ghumtjoueftbsammwltr
#postgresql.datasource.username=postgres
postgresql.datasource.password=postgres
#postgresql.datasource.password=postgres
postgresql.datasource.driver-class-name=org.postgresql.Driver
#simple: Utiliza el protocolo de consulta simple. 
#extended: Utiliza el protocolo de consulta extendida. 
#extendedForPrepared: Utiliza el protocolo de consulta extendida solo para consultas preparadas. 
#extendedCacheEverything: Utiliza el protocolo de consulta extendida y cachea los resultados de todas las consultas preparadas.
postgresql.datasource.hikari.data-source-properties.preferQueryMode=extended
#postgresql.datasource.hikari.auto-commit=true
#postgresql.datasource.hikari.data-source-properties.binaryTransfer=true


postgresql.datasource.maxActive=10
postgresql.datasource.maxIdle=5
postgresql.datasource.minIdle=2
postgresql.datasource.initialSize=5
postgresql.datasource.removeAbandoned=true

# Perfiles que se activan para las bases de datos
#spring.profiles.active=postgresql,mariadb
spring.profiles.active=postgresql


#Inicialización de la base de datos schema.sql y data.sql
#spring.sql.init.mode=always
#spring.sql.init.schema-always=false
#spring.sql.init.data-always=true


#Retraso en la inicialización del DataSource
spring.jpa.defer-datasource-initialization=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
#spring.datasource.hikari.auto-commit=false


# Establecer el tamaño máximo de página
spring.data.web.pageable.max-page-size=100

# Establecer el tamaño de página predeterminado
#spring.data.web.pageable.default-page-size=10

# Variables de JWT Key y expiracion en 1 hora
jwt.secretkey = 462D4A614E645267556B586E3272357538782F413F4428472B4B625065536856
#jwt.expiration = 3600000
jwt.expiration = 12960000000000


# Tamaño máximo para archivos pequeños (por ejemplo, 10MB)
spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=10MB


#spring.jpa.properties.hibernate.jdbc.batch_size=10
#logging.level.org.hibernate=DEBUG
#logging.level.org.hibernate.SQL=debug
#logging.level.org.springframework.jdbc.core: DEBUG

# Configuración para Jackson
# Para habilitar la salida JSON con formato (opcional)
spring.jackson.serialization.indent-output=true  
# Para evitar errores si hay beans vacíos
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false  
# Formato global para todas las fechas
#spring.jackson.date-format=yyyy-MM-dd
#spring.jackson.time-zone=UTC



# Configuración de PayPal SandBox
paypal.client-id.sandbox = Ae1Dm-VRxA6l30txWRlF6MvDyNBfpyg6mJbLWMd21RZ_DKRtAQcAyYqEhmAoCa6klr5ZpFP5cj2gUB42
paypal.client-secret.sandbox = EMXV7QVbDYI3rm4nnsSk2YSg8PtE71A7opwvAy-xHkOg5ZigNEQs1J97WC7ieAqE1ZKrwSjFUt4wAmNS

# Configuración de PayPal Live
paypal.client-id = AVDWeu2aV9JyK9MvJRzFycvWEY9v0RJZne9oTcaTHUbImA04mUmiagyOUe5PC2-WsSBeFKHth-aZ026F
paypal.client-secret = ECanw0RNVH7JkMbGyL7BgGMJxoWFp7f-YqyOpnS9aDh834LOr4d-M_hARX43UoYZHMolDJkw8J3a7BJ3
paypal.mode = sandbox
paypal.http.connection-timeout=5000
paypal.http.retry=1

# Configuración de Mercado Pago Prueva
mercadopago.clientId=211820683
mercadopago.clientSecret=TEST-a4032e20-6afd-425d-a692-945dd56a8d06
mercadopago.clientToken=TEST-1483429516892676-011316-af5fb6b974f40ca177a66e24bb119a50-211820683